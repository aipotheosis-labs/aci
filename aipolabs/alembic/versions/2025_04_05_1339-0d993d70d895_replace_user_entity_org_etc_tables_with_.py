"""Replace User, Entity, Org, etc tables with PropelAuth

Revision ID: 0d993d70d895
Revises: 1b82aeb7431f
Create Date: 2025-04-05 13:39:02.733005+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0d993d70d895'
down_revision: Union[str, None] = '1b82aeb7431f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('memberships')
    op.drop_table('subscriptions')
    op.drop_table('organizations')
    op.drop_table('users')
    op.drop_constraint('projects_owner_id_fkey', 'projects', type_='foreignkey')
    op.drop_table('entities')
    op.add_column('projects', sa.Column('org_id', sa.UUID(), nullable=False))
    op.drop_column('projects', 'owner_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('projects', sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False))
    op.create_foreign_key('projects_owner_id_fkey', 'projects', 'entities', ['owner_id'], ['id'])
    op.drop_column('projects', 'org_id')
    op.create_table('organizations',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['entities.id'], name='organizations_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='organizations_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('entity_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('plan', postgresql.ENUM('CUSTOM', 'FREE', 'PRO', 'ENTERPRISE', name='subscriptionplan'), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'CANCELLED', 'EXPIRED', name='subscriptionstatus'), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['entity_id'], ['entities.id'], name='subscriptions_entity_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='subscriptions_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('identity_provider', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id_by_provider', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['entities.id'], name='users_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('identity_provider', 'user_id_by_provider', name='uc_auth_provider_user'),
    postgresql_ignore_search_path=False
    )
    op.create_table('entities',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('ENTITY', 'USER', 'ORGANIZATION', name='entitytype'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('profile_picture', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='entities_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('memberships',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('ADMIN', 'MEMBER', name='organizationrole'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='memberships_organization_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='memberships_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='memberships_pkey')
    )
    # ### end Alembic commands ###

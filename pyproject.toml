[tool.poetry]
name = "aipolabs"
version = "0.0.1-beta.3"
description = "aipolabs"
authors = ["Aipolabs <team@aipolabs.xyz>"]
package-mode = false
[tool.poetry.dependencies]
python = "^3.12"
fastapi = { extras = ["standard"], version = "^0.115.0" }
uvicorn = { extras = ["standard"], version = "^0.31.0" }
pydantic = "^2.9.2"
sqlalchemy = "^2.0.35"
pgvector = "^0.3.4"
Authlib = "^1.3.2"
psycopg = { extras = ["binary"], version = "^3.2.3" }
httpx = "^0.27.2"
itsdangerous = "^2.2.0"
openai = "^1.51.2"
click = "^8.1.7"
openapi-spec-validator = "^0.7.1"
jsonschema = "^4.23.0"
limits = "^3.13.0"
aws-cdk-lib = "^2.164.1"
constructs = ">=10.0.0,<11.0.0"
jinja2 = "^3.1.5"
deepdiff = "^8.2.0"
python-json-logger = "^3.2.1"
logfire = { extras = ["fastapi", "sqlalchemy"], version = "^3.6.4" }
sentry-sdk = { extras = ["fastapi"], version = "^2.22.0" }

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
mypy = "^1.11.2"
alembic = "^1.13.3"
ruff = "^0.9.9"
pre-commit = "^4.0.0"
responses = "^0.25.3"
respx = "^0.21.1"

[tool.ruff]
line-length = 88
target-version = "py312"
extend-exclude = [".venv", "venv", "build", "dist", "aipolabs/alembic/versions"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "Q",   # flake8-quotes
    "RUF", # ruff-specific rules
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "PTH", # use pathlib
    "ERA", # eradicate
]
ignore = ["W", "D"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"

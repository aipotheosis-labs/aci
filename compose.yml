services:
  db:
    # Note: we need to use the pgvector/pgvector:pg17 image to use the pgvector extension, instead of the official postgres image
    image: pgvector/pgvector:pg17
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d local_db"]
      interval: 1s
      retries: 5
      start_period: 1s
      timeout: 10s
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: local_db
    ports:
      - "5432:5432"
    restart: no

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:8000/v1/health/"]
      interval: 10s
      retries: 5
      start_period: 3s
      timeout: 10s
    env_file:
      - .env
    environment:
      SERVER_SIGNING_KEY: SErq6tYWOXsCQZ0B-ynjAIOxVFyOQX71E8vprZx6Msg
      SERVER_JWT_ALGORITHM: HS256
      SERVER_JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 1440
      SERVER_GOOGLE_AUTH_CLIENT_ID: ${SERVER_GOOGLE_AUTH_CLIENT_ID?}
      SERVER_GOOGLE_AUTH_CLIENT_SECRET: ${SERVER_GOOGLE_AUTH_CLIENT_SECRET?}
      SERVER_GOOGLE_AUTH_SERVER_METADATA_URL: https://accounts.google.com/.well-known/openid-configuration
      SERVER_DB_SCHEME: postgresql+psycopg
      SERVER_DB_USER: user
      SERVER_DB_PASSWORD: password
      SERVER_DB_HOST: db
      SERVER_DB_PORT: 5432
      SERVER_DB_NAME: local_db
      SERVER_OPENAI_API_KEY: ${SERVER_OPENAI_API_KEY?}
      SERVER_OPENAI_EMBEDDING_MODEL: text-embedding-3-small
      SERVER_OPENAI_EMBEDDING_DIMENSION: 1024
      # need to set a high rate limit for running tests without triggering the rate limit
      SERVER_RATE_LIMIT_IP_PER_SECOND: 999
      SERVER_RATE_LIMIT_IP_PER_DAY: 100000
      SERVER_PROJECT_DAILY_QUOTA: 100000
      SERVER_APPLICATION_LOAD_BALANCER_DNS: 127.0.0.1
      SERVER_AIPOLABS_REDIRECT_URI_BASE: http://localhost:8000
      SERVER_DEV_PORTAL_URL: http://localhost:3000

    # useful for development, changes take effect in the container without needing to rebuild the image.
    volumes:
      - ./aipolabs/server:/aipolabs/server
      - ./aipolabs/common:/aipolabs/common
    ports:
      - "8000:8000"
    # this overrides the default CMD specified in the Dockerfile, use this for local development
    command: fastapi dev server/main.py --host 0.0.0.0 --port 8000
    depends_on:
      db:
        condition: service_healthy
    restart: no

  # can think of runner as an staging host for executing any commands
  # e.g., run pytest, seed db etc.
  runner:
    build:
      context: .
      dockerfile: Dockerfile.runner
    env_file:
      - .env
    environment:
      # All env variables required for the mono repo
      SERVER_SIGNING_KEY: SErq6tYWOXsCQZ0B-ynjAIOxVFyOQX71E8vprZx6Msg
      SERVER_JWT_ALGORITHM: HS256
      SERVER_JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 1440
      SERVER_GOOGLE_AUTH_CLIENT_ID: canbeanythingforpytest
      SERVER_GOOGLE_AUTH_CLIENT_SECRET: canbeanythingforpytest
      SERVER_GOOGLE_AUTH_SERVER_METADATA_URL: https://accounts.google.com/.well-known/openid-configuration
      SERVER_DB_SCHEME: postgresql+psycopg
      SERVER_DB_USER: user
      SERVER_DB_PASSWORD: password
      SERVER_DB_HOST: db
      SERVER_DB_PORT: 5432
      SERVER_DB_NAME: local_db
      SERVER_OPENAI_API_KEY: ${SERVER_OPENAI_API_KEY?}
      SERVER_OPENAI_EMBEDDING_MODEL: text-embedding-3-small
      SERVER_OPENAI_EMBEDDING_DIMENSION: 1024
      # need to set a high rate limit for running tests without triggering the rate limit
      SERVER_RATE_LIMIT_IP_PER_SECOND: 999
      SERVER_RATE_LIMIT_IP_PER_DAY: 100000
      SERVER_PROJECT_DAILY_QUOTA: 100000
      SERVER_APPLICATION_LOAD_BALANCER_DNS: 127.0.0.1
      SERVER_AIPOLABS_REDIRECT_URI_BASE: http://localhost:8000
      SERVER_DEV_PORTAL_URL: http://localhost:3000

      ALEMBIC_DB_SCHEME: postgresql+psycopg
      ALEMBIC_DB_USER: user
      ALEMBIC_DB_PASSWORD: password
      ALEMBIC_DB_HOST: db
      ALEMBIC_DB_PORT: 5432
      ALEMBIC_DB_NAME: local_db

      CLI_OPENAI_API_KEY: ${CLI_OPENAI_API_KEY?}
      CLI_OPENAI_EMBEDDING_MODEL: text-embedding-3-small
      CLI_OPENAI_EMBEDDING_DIMENSION: 1024
      CLI_DB_SCHEME: postgresql+psycopg
      CLI_DB_USER: user
      CLI_DB_PASSWORD: password
      CLI_DB_HOST: db
      CLI_DB_PORT: 5432
      CLI_DB_NAME: local_db
      CLI_SERVER_URL: http://localhost:8000

    # Mount the local code into the container so you can run scripts / Alembic
    volumes:
      - ./aipolabs:/aipolabs/aipolabs
      - ./apps:/aipolabs/apps
      - ./scripts:/aipolabs/scripts
      - ./alembic.ini:/aipolabs/alembic.ini
    command: >
      /bin/sh -c "alembic upgrade head && tail -f /dev/null"
    depends_on:
      db:
        condition: service_healthy
      server:
        condition: service_healthy
